package de.tubs.cs.ias.plotalyzer.parser.pii

import de.halcony.plotalyzer.database.entities.trafficcollection.Request
import de.tubs.cs.ias.plotalyzer.parser.pii.PiiTypes.PiiType
import de.tubs.cs.ias.plotalyzer.parser.util.JsStringDebugWrapper
import spray.json.JsObject

object PiiTypes extends Enumeration {
  type PiiType = Value
  val DEVICE_NAME, DEVICE_MAKER, DEVICE_MODEL, DEVICE_OS_TYPE,
  DEVICE_OS_VERSION, DEVICE_OS_API_LEVEL, DEVICE_OS_ROOTED, DEVICE_SCREEN_SIZE,
  DEVICE_SCREEN_BRIGHTNESS, DEVICE_SCREEN_DENSITY, DEVICE_SCREEN_HEIGHT,
  DEVICE_SCREEN_WIDTH, DEVICE_SCREEN_LAYOUT, DEVICE_BATTERY_LEVEL,
  DEVICE_BATTERY_STATUS, DEVICE_VOLUME, DEVICE_FREE_MEMORY, DEVICE_TOTAL_MEMORY,
  DEVICE_SPACE_EXTERNAL_FREE, DEVICE_SPACE_EXTERNAL_TOTAL,
  DEVICE_SPACE_INTERNAL_FREE, DEVICE_SPACE_INTERNAL_TOTAL, DEVICE_SPACE_FREE,
  DEVICE_SPACE_TOTAL, DEVICE_HEADSET, DEVICE_LANGUAGE, DEVICE_NETWORK_OPERATOR,
  DEVICE_NETWORK_CONNECTION_TYPE, DEVICE_IS_SIMULATOR, DEVICE_ACCELEROMETER_X,
  DEVICE_ACCELEROMETER_Y, DEVICE_ACCELEROMETER_Z, DEVICE_ROTATION_X,
  DEVICE_ROTATION_Y, DEVICE_ROTATION_Z, DEVICE_STORES, DEVICE_ELAPSED_TIME,
  DEVICE_UPTIME, IP_LOCAL_GATEWAY, TIME_ZONE, USER_AGEND, COUNTRY, APP_ID,
  APP_VERSION, ID_GLOBAL_ADID, DEVICE_CPU, SYSTEM_BOOT_TIME, ID_VENDOR_ADID,
  ID_UUID, ID_OTHER, IAB_STRING, OBFUSCATED, DEOBFUSCATED, LONGITUDE, LATITUDE =
    Value
}

case class PII(name: PiiType, value: String, endpoint: Request) {

  def toJson: JsObject = {
    JsObject(
      "PII" -> JsStringDebugWrapper.create(name.toString),
      "value" -> JsStringDebugWrapper.create(value),
    )
  }

}
